@page "/HistoriP"
@attribute [StreamRendering]
@using Newtonsoft.Json
<PageTitle>Home</PageTitle>

    
<div style="display: grid; grid-template-columns: 1fr 40vw 1fr; grid-template-rows: 1fr 20vh 1fr">
    <div style="grid-row: 1; grid-column: 2; display: flex; justify-content: center; align-items: center">
        <h1>Histori</h1>
    </div>
    <div style="grid-row: 2; grid-column: 2; width: 50vw; height: 50vh; overflow-y: auto">
        <table class="table">
            <thead>
            <tr>
                <th>Ip</th>
                <th>Login</th>
                <th>Connect</th>
                <th>Data</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var forecast in _elements!)
            {
                <tr>
                    <td>@forecast.Ip</td>
                    <td>@forecast.Login</td>
                    <td>@forecast.Connectuser</td>
                    <td>@forecast.datahistori</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

@*<select>
    @foreach (var forecast in _elements!)
    {
        <option>@forecast.Login, @forecast.Ip, @forecast.datahistori, @forecast.Connectuser</option>
    }
</select>*@
    
@code{
        
    private List<Histori> _elements = new();
    protected override async Task OnInitializedAsync()
    {
        using (var client = new HttpClient())
        {
            HttpResponseMessage responseMessage = await client.GetAsync("http://localhost:5003/Api/GetControllers/GetHistori");
            string context = await responseMessage.Content.ReadAsStringAsync();
            _elements = JsonConvert.DeserializeObject<List<Histori>>(context)!;
        }
    }
    private class Histori
    {
        public string Login;
        public string Ip;
        public DateTime? datahistori;
        public bool Connectuser;
    }
}